plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.tixon.reminders"
        minSdk 23
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            useJUnit()
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    testImplementation 'junit:junit:4.+'
    testImplementation "io.insert-koin:koin-test:$koin_version"
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    //Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxbinding3_version"

    implementation "com.github.tbruyelle:rxpermissions:$rxpermissions_version"

    implementation "androidx.recyclerview:recyclerview:$androix_recyclerview_version"

    //MVI-Core
    implementation "com.github.badoo.mvicore:binder:$mvicore"
    implementation "com.github.badoo.mvicore:mvicore:$mvicore"
    implementation "com.github.badoo.mvicore:mvicore-android:$mvicore"
    implementation "com.github.badoo.mvicore:mvicore-diff:$mvicore"

    /*//OpenStreetMap
    implementation "org.osmdroid:osmdroid-android:$OSM"*/

    implementation 'com.google.android.gms:play-services-maps:17.0.1'
}

//create signing configs
Properties props = new Properties()
def propFile = new File('keystore.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.debug.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.debug.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.debug.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.debug.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'keystore.properties found but some entries are missing'
        android.buildTypes.debug.signingConfig = null
    }
} else {
    println 'keystore.properties not found'
    android.buildTypes.debug.signingConfig = null
}